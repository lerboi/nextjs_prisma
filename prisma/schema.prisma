generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  password      String
  accounts      Account[]
  sessions      Session[]

  booking      Booking[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model RoomType {
  id                   Int       @id @default(autoincrement())
  name                 String    @unique
  description          String?
  price                Float?

  room                 Room[]
}

model Room {
  id                  Int       @id @default(autoincrement())
  name                String?
  roomTypeId          Int
  roomType            RoomType      @relation(fields: [roomTypeId], references: [id])

  Booking             Booking[]
}

model Booking {
  id            Int     @id @default(autoincrement())
  userId        String
  User          User    @relation(fields: [userId], references: [id])
  roomId        Int
  Room          Room    @relation(fields: [roomId], references: [id])
  bookDate      String
  bookStart     String
  bookEnd       String
  price         Float?

  @@unique([bookDate, bookStart, bookEnd])
} 